{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/ItemPost/ItemPost.js","store/actions/actions.js","store/actions/actionTypes.js","containers/ListPost/ListPost.js","containers/Pagination/Pagination.js","components/Button/Button.js","components/Input/Input.js","containers/Home/Home.js","api/api.js","containers/AddPost/AddPost.js","containers/ItemProfile/ItemProfile.js","App.js","serviceWorker.js","store/utility.js","store/reducers/posts.js","store/reducers/value.js","index.js"],"names":["Header","className","Footer","ListPost","props","useHistory","useState","time","setTime","useEffect","Date","data","date","toLocaleString","console","log","title","description","onClick","click","id","setPageOfItems","type","setPager","pager","setPost","setValue","inputValue","deleteValue","changeSearch","setPostItem","connect","dispatch","bindActionCreators","history","push","posts","map","el","i","_id","pageNumber","setPage","filter","page","items","getPager","length","pageOfItems","slice","startIndex","endIndex","search","totalItems","currentPage","pageSize","startPage","endPage","totalPages","Math","ceil","min","pages","Array","keys","disabled","undefined","index","key","Button","class","text","Input","value","placeholder","onChange","e","change","target","clickF","clickD","state","post","postPage","inputV","setInputV","filterPosts","setFilterPosts","updatedList","item","toLowerCase","to","getPosts","axios","get","then","res","setTitle","setDescription","AddPost","createPost","parse","rows","cols","postItem","saving","coment","setSaving","deleting","setDeleting","updateSwitch","setUpdateSwitch","setdescription","titleU","setTitleU","descriptionU","setdescriptionU","readSimilar","a","similar","postData","put","delete","exact","path","component","Home","ItemProfile","Boolean","window","location","hostname","match","updateObject","oldObject","updatedValues","initialState","filterItems","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d150b41d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <header className='header'>\r\n                <p className='logo'>\r\n                    <span className='first'>Nerdy</span><span className='second'>Soft</span>\r\n                </p>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <footer className='footer'>\r\n                <p className='created'>Created by Yurii Dubnytskyi</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useEffect, useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './ItemPost.css'\r\n\r\nconst ListPost = (props) => {\r\n    const history = useHistory()\r\n    const [time,setTime]=useState('')\r\n    useEffect(()=>{\r\n        setTime(new Date(props.data.date).toLocaleString())\r\n        console.log('date'+props.data.date)\r\n        console.log('date1'+time)\r\n    },[time])    \r\n    \r\n    return (\r\n        <div>\r\n            <div className='card'>\r\n                <p className='card-title'>{props.data.title}</p>\r\n                <p className='card-text'>{props.data.description}</p>\r\n                \r\n                <button className='card-btn' onClick={()=>props.click(props.id)}>Read More</button>\r\n                <p className='card-time'>{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ListPost","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const setPageOfItems = (data) =>{\r\n    return {\r\n        type:actionTypes.SET_PAGE_OF_ITEMS,\r\n        data:data\r\n    }\r\n}\r\nexport const setPager = (pager) =>{\r\n    return {\r\n        type:actionTypes.SET_PAGER,\r\n        pager\r\n    }\r\n}\r\nexport const setPost = (data) =>{\r\n    \r\n    return {\r\n        type:actionTypes.SET_POSTS,\r\n        data\r\n    }\r\n}\r\nexport const setValue = (inputValue) =>{\r\n    return {\r\n        type:actionTypes.SET_VALUE,\r\n        inputValue\r\n    }\r\n}\r\nexport const deleteValue = () =>{\r\n    return {\r\n        type:actionTypes.DELETE_VALUE,\r\n        \r\n    }\r\n}\r\nexport const changeSearch = (data) =>{\r\n    return {\r\n        type:actionTypes.CHANCHE_SEARCH,\r\n        data\r\n    }\r\n}\r\nexport const setPostItem = (data) =>{\r\n    return {\r\n        type:actionTypes.SET_POST_ITEM,\r\n        data\r\n    }\r\n}\r\nexport const deletePostItem = () =>{\r\n    return {\r\n        type:actionTypes.DELETE_POST_ITEM,\r\n       \r\n    }\r\n}","export const SET_PAGE_OF_ITEMS = 'SET_PAGE_OF_ITEMS'\r\nexport const SET_PAGER = 'SET_PAGER'\r\nexport const SET_POSTS = 'SET_POSTS'\r\nexport const SET_VALUE = 'SET_VALUE'\r\nexport const DELETE_VALUE = 'DELETE_VALUE'\r\nexport const CHANCHE_SEARCH = 'CHANCHE_SEARCH'\r\nexport const SET_POST_ITEM = 'SET_POST_ITEM'\r\nexport const DELETE_POST_ITEM = 'DELETE_POST_ITEM'","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport ItemPost from '../../components/ItemPost/ItemPost'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {setPostItem} from '../../store/actions/actions'\r\nimport './ListPost.css'\r\n\r\nconst ListPost = (props) => {\r\n    const history = useHistory()\r\n    const setPost = (id)=>{\r\n        props.setPostItem(id)\r\n        history.push(`/post/:${id}`)\r\n    }\r\n    return (\r\n        <div className='card-container'>\r\n            {props.posts.map((el,i)=>{\r\n                return <ItemPost data={el} id={el._id} click={setPost} time={new Date(el.date)}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            setPostItem\r\n        },dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispachToProps)(ListPost)\r\n","import React,{useState,useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport {setPageOfItems} from '../../store/actions/actions'\r\nimport './Pagination.css'\r\n\r\nconst Pagination = (props) => {\r\n    const [pageNumber,setPageNumber] = useState(1)\r\n    \r\n\r\n    useEffect(()=>{\r\n        // if (props.filter && props.filter.length) {\r\n        //     setPage(pageNumber);\r\n        // }\r\n        // if (props.filter !== props.posts) {\r\n        //     setPage(pageNumber);\r\n        // }\r\n        \r\n        setPage(pageNumber) \r\n        \r\n        \r\n        console.log('here'+props.filter)\r\n    },[props.filter])\r\n\r\n    const setPage = (page) => {\r\n        const items = props.filter;\r\n        let pager = props.pager;\r\n\r\n        if (page < 1) {\r\n            return;\r\n        }\r\n\r\n        pager = getPager(items.length, page);\r\n\r\n        const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n        if(props.search){\r\n            props.setPager(pager);\r\n            props.setPageOfItems(pageOfItems);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const getPager = (totalItems, currentPage, pageSize) => {\r\n        currentPage = currentPage || 1;\r\n        pageSize = pageSize || 4;\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n        let startPage, endPage;\r\n\r\n        if (totalPages <= 4) {\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 8;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 6;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 4;\r\n                endPage = currentPage + 3;\r\n            }\r\n        }\r\n\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        let pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <ul className=\"pagination\">\r\n                <li>\r\n                    <button disabled={props.pager.currentPage === 1 ? true : false} onClick={() => setPage(1)}>First</button>\r\n                </li>\r\n                <li>\r\n                    <button disabled={props.pager.currentPage === 1 ? true : false} onClick={() => setPage(props.pager.currentPage - 1)}>Previous</button>\r\n                </li>\r\n                {props.pager.pages === undefined ?<></>: props.pager.pages.map((page, index) =>\r\n                    <li key={index} className={props.pager.currentPage === page ? 'active' : ''}>\r\n                        <button disabled={props.pager.currentPage === page ? true : false} onClick={() => setPage(page)}>{page}</button>\r\n                    </li>\r\n                )}\r\n                <li>\r\n                    <button disabled={props.pager.currentPage === props.pager.totalPages ? true : false} onClick={() => setPage(props.pager.currentPage + 1)}>Next</button>\r\n                </li>\r\n                <li>\r\n                    <button disabled={props.pager.currentPage === props.pager.totalPages ? true : false} onClick={() => setPage(props.pager.totalPages)}>Last</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            setPageOfItems\r\n        },dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispachToProps)(Pagination)","import React,{useState} from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div className={`btn-${props.class}`}>\r\n           <button className={`btn ${props.class}`} onClick={()=>props.click()}>{props.text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Button","import React,{useState} from 'react';\r\nimport './Input.css';\r\nimport Button from '../Button/Button'\r\n\r\nconst Input = (props) => {\r\n    \r\n    return (\r\n        <div className='input-main'>\r\n            <div className='input-container'>\r\n                <label className='label-text'>Search by title</label>\r\n                <input value={props.value} className='input' placeholder='Search' onChange={(e)=> props.change(e.target.value)}/>\r\n            </div>\r\n            <Button class='search' text='Search' click={props.clickF}/>\r\n            <Button class='clear' text='Clear' click={props.clickD}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Input","import React,{useState, useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport ListPost from '../ListPost/ListPost';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport './Home.css'\r\nimport Input from '../../components/Input/Input'\r\nimport Button from '../../components/Button/Button'\r\nimport {deleteValue,setValue,setPager,changeSearch} from '../../store/actions/actions'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = (props) => {\r\n    const [inputV,setInputV] = useState('')\r\n    const [filterPosts, setFilterPosts] = useState(['q'])\r\n\r\n    useEffect(()=>{\r\n        if(props.inputValue === ''){\r\n            setFilterPosts(props.posts)\r\n        }else{\r\n            setInputV(props.inputValue)\r\n        }\r\n    },[props.posts])\r\n\r\n    \r\n    const filterP = () =>{\r\n        \r\n        const updatedList = props.posts.filter((item)=>{\r\n          return item.title.toLowerCase().search(\r\n            inputV.toLowerCase()) !== -1;\r\n        });\r\n        if(inputV === ''){\r\n            setFilterPosts([...props.posts])\r\n        }else{\r\n            setFilterPosts(updatedList)\r\n        }\r\n        props.setValue(inputV)\r\n        props.changeSearch(true)\r\n        console.log(filterPosts)\r\n    }\r\n    const deleteInput = () => {\r\n        setFilterPosts([...props.posts])\r\n        props.deleteValue()\r\n        setInputV('')\r\n        props.changeSearch(true)\r\n        props.setPager({})\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <div className='functional-container'>\r\n                <Input change={setInputV} clickF={filterP} clickD={deleteInput} value={inputV}/>\r\n                <Link to='/add'><Button text='Add Post' click={()=>console.log()} class='add'></Button></Link>\r\n            </div>\r\n            <div className='listPost'>\r\n                <ListPost posts={props.postPage}/>\r\n            </div>\r\n            <div>\r\n                <Pagination filter={filterPosts}  pager={props.pager} setPager={props.setPager} inputValue={props.inputValue} search={props.search}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts:state.posts.post,\r\n        postPage:state.posts.pageOfItems,\r\n        pager:state.value.pager,\r\n        inputValue:state.value.inputValue,\r\n        search:state.value.search\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            deleteValue,setValue,setPager,changeSearch\r\n        },dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispachToProps)(Home)","import axios from 'axios'\r\n\r\nexport const createPost = (post) => axios.post(\"/api/post/create\",post).then((res) => res)\r\n\r\nexport const updatePost = (postData) => axios.put(\"/api/post/updatePost\",postData).then((res) => res)\r\n\r\nexport const deletePost = (id) => axios.delete(\"/api/post/deletePost/\"+id).then((res) => res)\r\n\r\nexport const getPosts = () => axios.get(\"/api/post/getAll\").then((res)=>res)\r\n","import React,{useState, useEffect} from 'react'\r\nimport './AddPost.css'\r\nimport {createPost,getPosts} from '../../api/api'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {setPost,changeSearch} from '../../store/actions/actions'\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport Button from '../../components/Button/Button'\r\n\r\nconst AddPost = (props) => {\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState('')\r\n    const [description,setDescription] = useState('')     \r\n    const AddPost = () =>{\r\n        const post = {title,description,date:Date.parse(new Date())}\r\n        createPost(post).then(()=>{\r\n            getPosts().then((res)=>{\r\n                props.setPost([...res.data])\r\n                props.changeSearch(true)\r\n                history.push('/')\r\n            })\r\n        })\r\n    }\r\n    const Cancel = () => {\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className='add-post_container'>\r\n            <div className='new-post'>\r\n                <h2>Add New Post</h2>\r\n                <p className='new-pots_title'>Title</p>\r\n                <input value={title} onChange={(e)=>setTitle(e.target.value)}/>\r\n                <p className='new-post_description'>Description</p>\r\n                <textarea rows={20} cols={30} value={description} onChange={(e)=>setDescription(e.target.value)}/>\r\n                \r\n            </div>\r\n            <div className='see-post'>\r\n                <h2>How it will look like</h2>\r\n                <div className='card'>\r\n                    <p className='card-title'>Title</p>\r\n                    <p className='card-title1'>{title}</p>\r\n                    <p className='card-text1'>Description</p>\r\n                    <p className='card-text'>{description}</p>\r\n                    <button className='card-btn1'>Read More</button>       \r\n                </div>\r\n            </div>\r\n            <div className='btn-container'>\r\n                <Button click={()=>AddPost()} class='post'  text='Add'/>\r\n                <Button click={()=>Cancel()} class='post' text='Cancel'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            setPost,changeSearch\r\n        },dispatch)\r\n    }\r\n  }\r\n  \r\nexport default connect(null,mapDispachToProps)(AddPost)\r\n","import React, { useEffect, useState } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport {Link} from 'react-router-dom'\r\nimport {changeSearch,setPost,setPostItem} from '../../store/actions/actions'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {updatePost,getPosts,deletePost} from '../../api/api'\r\nimport './ItemProfile.css'\r\n\r\nconst ItemProfile = (props) => {\r\n    \r\n    const history = useHistory()\r\n    const [saving,setSaving] = useState({saving:false,coment:''})\r\n    const [deleting,setDeleting] = useState({deleting:false,coment:''})\r\n    const [updateSwitch,setUpdateSwitch] = useState(false)\r\n    const [title,setTitle] = useState(props.item.title)\r\n    const [description,setdescription] = useState(props.item.description)\r\n    const [titleU,setTitleU] = useState(props.item.title)\r\n    const [descriptionU,setdescriptionU] = useState(props.item.description)\r\n    \r\n    useEffect(()=>{\r\n        props.changeSearch(false)\r\n        setTitleU(props.item.title)\r\n        setTitle(props.item.title)\r\n        setdescription(props.item.description)\r\n        setdescriptionU(props.item.description)\r\n        setUpdateSwitch(false)\r\n        setDeleting({deleting:false,coment:''})\r\n        setSaving({saving:false,coment:''})\r\n    },[props.item])\r\n\r\n    const cancel = () =>{\r\n        setTitleU(title)\r\n        setdescriptionU(description)\r\n        setUpdateSwitch(false)\r\n    }\r\n\r\n    const save = () =>{\r\n        setSaving({saving:true,coment:'saving'})\r\n        updatePost({id:props.item._id,title:titleU,description:descriptionU}).then(()=>{           \r\n            getPosts().then((res)=>{\r\n                props.setPost([...res.data])\r\n                props.changeSearch(true)\r\n                setSaving({saving:true,coment:'Save'})\r\n            })           \r\n        })\r\n        \r\n    }\r\n    const deleteItem = () =>{\r\n        setDeleting({deleting:true,coment:'deleting'})\r\n        deletePost(props.item._id).then(()=>{\r\n            getPosts().then((res)=>{\r\n                props.setPost([...res.data])\r\n                props.changeSearch(true)\r\n                setDeleting({deleting:true,coment:'Deleted'})\r\n            })  \r\n        })\r\n        \r\n    }\r\n    const toHome = () =>{\r\n        history.push('/')\r\n    }\r\n    const readSimilar = async (id) =>{\r\n        await props.setPostItem(id)\r\n        await history.push('/post/:'+id)\r\n    }\r\n    return (\r\n        <div className='post-container'>\r\n            {saving.saving || deleting.deleting?\r\n            <div className='post-comment'><p>{saving.coment}{deleting.coment}</p></div>:\r\n            <div className='post-info'>\r\n                <h2>Post</h2>\r\n                <p>Title</p>\r\n                <p>{titleU}</p>\r\n                {updateSwitch?\r\n                <input value={titleU} onChange={(e)=>setTitleU(e.target.value)}/>\r\n                :\r\n                <></>\r\n                }\r\n                <p>Description</p>\r\n                <p>{descriptionU}</p>\r\n                {updateSwitch?\r\n                <textarea value={descriptionU} onChange={(e)=>setdescriptionU(e.target.value)}/>\r\n                :\r\n                <></>\r\n                }\r\n            </div>\r\n            }\r\n            <div>\r\n                <h2>Similay Posts</h2>\r\n                {props.item.similar.length === 0?<></>:\r\n                props.item.similar.map((el)=>{\r\n                    console.log(el)\r\n                    return (\r\n                        <div>\r\n                            <p>{el.title}</p>\r\n                            <p>{el.description}</p>\r\n                            <button onClick={()=>readSimilar(el.id)}>Read More</button>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                \r\n                {\r\n                    saving.saving||deleting.deleting?<></>:\r\n\r\n                    updateSwitch?\r\n                    <>\r\n                    <button onClick={save}>Save</button>\r\n                    <button onClick={cancel}>Cancel</button>\r\n                    </>\r\n                    :\r\n                    <button onClick={()=>setUpdateSwitch(true)}>Update</button>\r\n                \r\n                }\r\n\r\n                {saving.saving||deleting.deleting?<></>:\r\n                <button onClick={deleteItem}>Delete</button>\r\n                }\r\n                \r\n                <button onClick={toHome}>Home</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        item:state.posts.postItem[0]\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            changeSearch,setPost,setPostItem\r\n        },dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispachToProps)(ItemProfile)","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport Home from './containers/Home/Home'\nimport AddPost from './containers/AddPost/AddPost'\nimport ItemProfile from './containers/ItemProfile/ItemProfile'\nimport {setPost} from './store/actions/actions'\nimport {\n    BrowserRouter,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport {getPosts} from './api/api'\n\n\nconst App = (props) => {\n  useEffect(()=>{\n\n    getPosts().then((res)=>{\n         props.setPost([...res.data])\n         console.log(res)\n    })\n    \n  },[])\n  return (\n    <BrowserRouter>\n        <div>   \n            <Header />\n\n            <Switch>\n                <Route exact path=\"/\" component={Home} />                    \n                <Route path=\"/post/:id\" component={ItemProfile} /> \n                <Route path=\"/add\" component={AddPost} />                   \n            </Switch>\n\n            <Footer />\n        </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n      dispatch,\n      ...bindActionCreators({\n          setPost\n      },dispatch)\n  }\n}\n\nexport default connect(null,mapDispachToProps)(App)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedValues) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedValues\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    post:[],\r\n    pageOfItems:[],\r\n    postItem:[]\r\n};\r\n\r\nconst filterItems=(id,state)=>{\r\n    return state.post.filter(el=>el._id===id)\r\n}\r\n\r\nconst post = (state = initialState,action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_POSTS:\r\n            return updateObject(state,{\r\n                post:[...action.data]\r\n            })\r\n        case actionTypes.SET_POST_ITEM:\r\n            return updateObject(state,{\r\n                postItem:filterItems(action.data,state)\r\n            })\r\n        case actionTypes.DELETE_POST_ITEM:\r\n            return updateObject(state,{\r\n                postItem:[]\r\n            })\r\n        case actionTypes.SET_PAGE_OF_ITEMS:\r\n            return updateObject(state,{\r\n                pageOfItems:[...action.data]\r\n            });\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default post","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    pager:1,\r\n    inputValue:'',\r\n    search:true\r\n};\r\n\r\nconst post = (state = initialState,action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_PAGER:\r\n            return updateObject(state,{\r\n                pager:action.pager\r\n            });\r\n        case actionTypes.SET_VALUE:\r\n            return updateObject(state,{\r\n                inputValue:action.inputValue\r\n            });\r\n        case actionTypes.DELETE_VALUE:\r\n            return updateObject(state,{\r\n                inputValue:''\r\n            });\r\n        case actionTypes.CHANCHE_SEARCH:\r\n            return updateObject(state,{\r\n                search:action.data\r\n            });\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default post","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport posts from \"./store/reducers/posts\"\nimport value from \"./store/reducers/value\"\n\nconst rootReducer = combineReducers({\n  posts:posts,\n  value:value\n});\n\nconst logger = (store) => {\n  return (next) => {\n      return (action) => {\n          console.log('[Middleware] Dispatching', action);\n          const result = next(action);\n          console.log('[Middleware] next state', store.getState());\n          return result;\n      }\n  }\n};\n\nconst composeEnhancers = (window && (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}